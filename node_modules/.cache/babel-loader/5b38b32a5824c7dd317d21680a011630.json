{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dominicnguyen/Desktop/SENG513/513 project/reactapi/SENG-513/src/HideText.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nexport default class HideText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textDisplay: false\n    };\n  }\n\n  ToggleButton() {\n    this.setState(currentState => ({\n      textDisplay: currentState.textDisplay\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.ToggleButton(),\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), \"Some Text here\", !this.state.textDisplay && this.props.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dominicnguyen/Desktop/SENG513/513 project/reactapi/SENG-513/src/HideText.js"],"names":["React","ReactDOM","HideText","Component","constructor","props","state","textDisplay","ToggleButton","setState","currentState","render","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAE;AADN,KAAX;AAGH;;AAEDC,EAAAA,YAAY,GAAE;AACV,SAAKC,QAAL,CAAeC,YAAD,KAAmB;AAC7BH,MAAAA,WAAW,EAAEG,YAAY,CAACH;AADG,KAAnB,CAAd;AAGH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKH,YAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,oBAKK,CAAC,KAAKF,KAAL,CAAWC,WAAZ,IAA2B,KAAKF,KAAL,CAAWO,IAL3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAxBgD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class HideText extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            textDisplay: false,\n        }\n    }\n\n    ToggleButton(){\n        this.setState((currentState) => ({\n            textDisplay: currentState.textDisplay, \n        }));\n    }\n\n    render(){\n        return(\n            <div>\n                <button onClick={() => this.ToggleButton()}>\n                  Toggle\n                </button>\n                Some Text here\n                {!this.state.textDisplay && this.props.text}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}