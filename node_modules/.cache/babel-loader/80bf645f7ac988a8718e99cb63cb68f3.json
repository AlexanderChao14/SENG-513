{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dominicnguyen/Desktop/SENG513/513 project/reactapi/src/App.js\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n\n  fetchUsers() {\n    //fetch using getAllRegisteredUser from aws\n    fetch('https://01vablvh7h.execute-api.us-east-1.amazonaws.com/dev/getallregistereduser') //get response and receive in Json format\n    .then(response => response.json()) //update user state\n    .then(data => this.setState({\n      users: data,\n      isLoading: false\n    })) //catch any errors and update\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  render() {\n    const {\n      isLoading,\n      users,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Random User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"// Display a message if we encounter an error\", error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this) : null, \"// Here's our data check\", !isLoading ? users.map(user => {\n        const {\n          username,\n          name,\n          email\n        } = user;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email Address: \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      }) // If there is a delay in data, let's let the user know it's loading\n      :\n      /*#__PURE__*/\n      _jsxDEV(\"h3\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dominicnguyen/Desktop/SENG513/513 project/reactapi/src/App.js"],"names":["React","Component","App","state","isLoading","users","error","fetchUsers","fetch","then","response","json","data","setState","catch","componentDidMount","render","message","map","user","username","name","email"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BE,KAF0B,GAElB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAFkB;AAAA;;AAQ1BC,EAAAA,UAAU,GAAE;AACV;AACAC,IAAAA,KAAK,CAAC,iFAAD,CAAL,CACA;AADA,KAECC,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAGA;AAHA,KAICF,IAJD,CAIMG,IAAI,IACR,KAAKC,QAAL,CAAc;AACZR,MAAAA,KAAK,EAACO,IADM;AAEZR,MAAAA,SAAS,EAAE;AAFC,KAAd,CALF,EAUA;AAVA,KAWCU,KAXD,CAWOR,KAAK,IAAI,KAAKO,QAAL,CAAc;AAAEP,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CAXhB;AAYD;;AAGDW,EAAAA,iBAAiB,GAAE;AACjB,SAAKR,UAAL;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,QAA8B,KAAKH,KAAzC;AACA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,mDAGGG,KAAK,gBAAG;AAAA,kBAAIA,KAAK,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,cAAH,GAA4B,IAHpC,8BAKG,CAACb,SAAD,GACCC,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;AAChB,cAAM;AAAEC,UAAAA,QAAF;AAAYC,UAAAA,IAAZ;AAAkBC,UAAAA;AAAlB,YAA4BH,IAAlC;AACA,4BACE;AAAA,kCACE;AAAA,iCAAUE,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,0CAAmBC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAAUF,QAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATD,CADD,CAWD;AAXC;AAAA;AAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAtDyB;;AA0D5B,eAAelB,GAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass App extends Component {\n\n  state = {\n    isLoading: true,\n    users: [],\n    error: null\n  }\n  \n  fetchUsers(){\n    //fetch using getAllRegisteredUser from aws\n    fetch('https://01vablvh7h.execute-api.us-east-1.amazonaws.com/dev/getallregistereduser')\n    //get response and receive in Json format\n    .then(response => response.json())\n    //update user state\n    .then(data=>\n      this.setState({\n        users:data,\n        isLoading: false,\n      })\n    )\n    //catch any errors and update\n    .catch(error => this.setState({ error, isLoading: false}));\n  }\n    \n\n  componentDidMount(){\n    this.fetchUsers();\n  }\n\n  render() {\n    const { isLoading, users, error } = this.state;\n    return (\n      <React.Fragment>\n        <h1>Random User</h1>\n        // Display a message if we encounter an error\n        {error ? <p>{error.message}</p> : null}\n        // Here's our data check\n        {!isLoading ? (\n          users.map(user => {\n            const { username, name, email } = user;\n            return (\n              <div key={username}>\n                <p>Name: {name}</p>\n                <p>Email Address: {email}</p>\n                <hr />\n              </div>\n            );\n          })\n        // If there is a delay in data, let's let the user know it's loading\n        ) : (\n          <h3>Loading...</h3>\n        )}\n      </React.Fragment>\n    );\n  }\n\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}